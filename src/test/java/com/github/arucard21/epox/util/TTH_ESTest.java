/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 13 20:12:28 GMT 2018
 */

package com.github.arucard21.epox.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.arucard21.epox.util.TTH;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TTH_ESTest extends TTH_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TTH tTH0 = new TTH();
      byte[] byteArray0 = new byte[5];
      tTH0.update(byteArray0, (int) (byte)1, (int) (byte)0);
      assertEquals(5, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TTH tTH0 = new TTH();
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        tTH0.update(byteArray0, (int) (byte)0, (-446));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TTH tTH0 = new TTH();
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        tTH0.update(byteArray0, 2851, (-713));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Input buffer too short
         //
         verifyException("java.security.MessageDigest", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TTH tTH0 = new TTH();
      tTH0.update(1);
      assertEquals(0L, tTH0.getValue());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TTH tTH0 = new TTH();
      String string0 = tTH0.getHexValue();
      assertEquals("lwpnacqdbzryxw3vhjvcj64qbznghohhhzwclnq", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TTH tTH0 = new TTH();
      tTH0.reset();
      assertEquals(0L, tTH0.getValue());
  }
}
