/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 13 20:08:26 GMT 2018
 */

package com.github.arucard21.epox.webaom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.arucard21.epox.webaom.RuleMenu;
import java.util.EmptyStackException;
import javax.swing.JPopupMenu;
import javax.swing.JTextArea;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.helpers.AttributesImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RuleMenu_ESTest extends RuleMenu_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JTextArea jTextArea0 = new JTextArea();
      RuleMenu ruleMenu0 = new RuleMenu(jTextArea0);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      ruleMenu0.startElement("DO ", "ms", "item", attributesImpl0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl(attributesImpl0);
      ruleMenu0.startElement("ulx", "}=Nx%F#", "elem", attributes2Impl0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JTextArea jTextArea0 = new JTextArea();
      RuleMenu ruleMenu0 = new RuleMenu(jTextArea0);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      ruleMenu0.startElement("DO ", "ms", "item", attributesImpl0);
      // Undeclared exception!
      try { 
        ruleMenu0.endElement("hZ McwX[2r}|bpX", "MK;3J8W='wsX_zM", "item");
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JTextArea jTextArea0 = new JTextArea("MK;3J8W='wsX_zM");
      RuleMenu ruleMenu0 = new RuleMenu(jTextArea0);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      ruleMenu0.startElement("DO ", "mds", "item", attributesImpl0);
      JPopupMenu jPopupMenu0 = ruleMenu0.getMenu();
      assertFalse(jPopupMenu0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JTextArea jTextArea0 = new JTextArea();
      RuleMenu ruleMenu0 = new RuleMenu(jTextArea0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      // Undeclared exception!
      try { 
        ruleMenu0.startElement("", "", (String) null, attributes2Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JTextArea jTextArea0 = new JTextArea("Me WANTS!");
      RuleMenu ruleMenu0 = new RuleMenu(jTextArea0);
      // Undeclared exception!
      try { 
        ruleMenu0.endElement("Me WANTS!", "", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JTextArea jTextArea0 = new JTextArea("z#p#($(");
      RuleMenu ruleMenu0 = new RuleMenu(jTextArea0);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        ruleMenu0.characters(charArray0, 1351, 268370175);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RuleMenu ruleMenu0 = new RuleMenu((JTextArea) null);
      // Undeclared exception!
      try { 
        ruleMenu0.characters((char[]) null, 1113, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JTextArea jTextArea0 = new JTextArea(0, 0);
      RuleMenu ruleMenu0 = new RuleMenu(jTextArea0);
      char[] charArray0 = new char[3];
      ruleMenu0.characters(charArray0, 0, 0);
      assertEquals(3, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JTextArea jTextArea0 = new JTextArea();
      RuleMenu ruleMenu0 = new RuleMenu(jTextArea0);
      ruleMenu0.endElement("H$ 0L4kt2d", "com.github.arucard21.epox.webaom.RuleMenu", "&protover=3&client=webaom&clientver=119&nat=1&comp=1&enc=utf8");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RuleMenu ruleMenu0 = new RuleMenu((JTextArea) null);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      ruleMenu0.startElement("!w[.ez0**kw3", "!w[.ez0**kw3", "menu", attributes2Impl0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JTextArea jTextArea0 = new JTextArea();
      RuleMenu ruleMenu0 = new RuleMenu(jTextArea0);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      ruleMenu0.startElement("Xlem", "Xlem", "Xlem", attributesImpl0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JTextArea jTextArea0 = new JTextArea("{tK}x6Xe0AdS");
      RuleMenu ruleMenu0 = new RuleMenu(jTextArea0);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      // Undeclared exception!
      try { 
        ruleMenu0.startElement("elem", "{tK}x6Xe0AdS", "elem", attributesImpl0);
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JTextArea jTextArea0 = new JTextArea();
      RuleMenu ruleMenu0 = new RuleMenu(jTextArea0);
      // Undeclared exception!
      try { 
        ruleMenu0.getMenu();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }
}
