/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 13 20:01:46 GMT 2018
 */

package com.github.arucard21.epox.webaom.data;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.arucard21.epox.util.Bits;
import com.github.arucard21.epox.webaom.data.Anime;
import com.github.arucard21.epox.webaom.data.Ep;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Anime_ESTest extends Anime_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Anime anime0 = new Anime((-3550));
      Anime anime1 = new Anime(5);
      // Undeclared exception!
      try { 
        anime1.comp(anime0, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.arucard21.epox.webaom.data.Anime", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Anime anime0 = new Anime(854);
      Anime anime1 = new Anime(0);
      int int0 = anime1.comp(anime0, (-2));
      assertEquals(0, int0);
      assertEquals(854, anime0.id);
      assertEquals(0, anime1.getPct());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Anime anime0 = new Anime((-3550));
      anime0.yea = (-3550);
      int int0 = anime0.comp(anime0, 5);
      assertEquals(0, int0);
      assertEquals((-3550), anime0.id);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Anime anime0 = new Anime((-3550));
      Anime anime1 = new Anime(5);
      int int0 = anime1.comp(anime0, (-5));
      assertEquals(5, anime1.id);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Anime anime0 = new Anime((-2319));
      Anime anime1 = new Anime((-2319));
      // Undeclared exception!
      try { 
        anime0.compareTo(anime1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.arucard21.epox.webaom.data.Anime", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Anime anime0 = new Anime((-3550));
      Anime anime1 = new Anime(5);
      int int0 = anime1.comp(anime0, (-15));
      assertEquals(11, int0);
      assertEquals(5, anime1.id);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Anime anime0 = new Anime((-3970));
      anime0.comp(anime0, 0);
      assertEquals((-3970), anime0.id);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Anime anime0 = new Anime((-1121));
      anime0.init();
      anime0.lep = (-1121);
      char char0 = anime0.miss();
      assertEquals((-1121), anime0.id);
      assertEquals(' ', char0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Anime anime0 = new Anime((-1121));
      anime0.init();
      anime0.TPRI = (-1);
      char char0 = anime0.miss();
      assertEquals((-1121), anime0.id);
      assertEquals(' ', char0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Anime anime0 = new Anime((-47));
      Bits bits0 = new Bits(0);
      anime0.pro = bits0;
      anime0.yea = 9;
      char char0 = anime0.miss();
      assertEquals(' ', char0);
      assertEquals((-47), anime0.id);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Anime anime0 = new Anime(3369);
      anime0.yen = 3369;
      anime0.init();
      char char0 = anime0.miss();
      assertEquals(3369, anime0.id);
      assertEquals(' ', char0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Anime anime0 = new Anime(1297);
      anime0.init();
      anime0.pct = (-1);
      char char0 = anime0.miss();
      assertEquals(1297, anime0.id);
      assertEquals(' ', char0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Anime anime0 = new Anime((-1121));
      anime0.init();
      anime0.lep = (-1121);
      anime0.updatePct();
      assertEquals((-1121), anime0.id);
      assertEquals(0, anime0.pct);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Anime anime0 = new Anime((-1121));
      anime0.lep = (-1121);
      // Undeclared exception!
      try { 
        anime0.updatePct();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.arucard21.epox.webaom.data.Anime", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Anime anime0 = new Anime((-2743));
      anime0.eps = (-2743);
      // Undeclared exception!
      try { 
        anime0.updatePct();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.arucard21.epox.webaom.data.Anime", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Anime anime0 = new Anime(1);
      Ep ep0 = new Ep((-369));
      ep0.num = " (";
      anime0.regEp(ep0, false);
      assertEquals(1, anime0.id);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Anime anime0 = new Anime(1297);
      anime0.init();
      anime0.typ = "P";
      Ep ep0 = new Ep((-124));
      ep0.num = "P";
      ep0.num = "7";
      anime0.regEp(ep0, true);
      assertEquals(1297, anime0.id);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Anime anime0 = new Anime(1297);
      anime0.init();
      Ep ep0 = new Ep((-124));
      ep0.num = "P";
      ep0.num = "7";
      anime0.eps = (-124);
      anime0.regEp(ep0, true);
      assertEquals(1297, anime0.id);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Anime anime0 = new Anime(3158);
      Anime.TPRI = 77;
      String string0 = anime0.serialize();
      assertEquals("3158|0|0|0|null|null|null|null|null|0", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Anime anime0 = new Anime(1);
      anime0.pct = (-369);
      String string0 = anime0.serialize();
      assertEquals("1|0|0|0|null|null|null|null|null|0", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Anime anime0 = new Anime(1);
      anime0.eng = " (";
      String string0 = anime0.serialize();
      assertEquals("1|0|0|0|null|null|null| (|null|0", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Anime anime0 = new Anime(1297);
      anime0.cat = "P";
      String string0 = anime0.serialize();
      assertEquals("1297|0|0|0|null|null|null|null|P|0", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Anime anime0 = new Anime((-47));
      anime0.rom = ".aAazpgeYa0of@cu";
      anime0.serialize();
      assertEquals((-47), anime0.id);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Anime anime0 = new Anime((-47));
      anime0.typ = "com.github.arucard21.epox.util.Bits";
      String string0 = anime0.serialize();
      assertEquals("-47|0|0|0|com.github.arucard21.epox.util.Bits|null|null|null|null|0", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Anime anime0 = new Anime((-47));
      anime0.yea = 9;
      String string0 = anime0.serialize();
      assertEquals("-47|0|0|9|null|null|null|null|null|0", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Anime anime0 = new Anime((-47));
      anime0.lep = 7;
      String string0 = anime0.serialize();
      assertEquals("-47|0|7|0|null|null|null|null|null|0", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Anime anime0 = new Anime((-2743));
      anime0.eps = (-2743);
      String string0 = anime0.serialize();
      assertEquals("-2743|-2743|0|0|null|null|null|null|null|0", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Anime anime0 = new Anime((-47));
      anime0.lep = 7;
      Object object0 = new Object();
      anime0.comp(object0, (-1));
      assertEquals((-47), anime0.id);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Anime anime0 = new Anime((-2319));
      anime0.eps = 3;
      String string0 = anime0.toString();
      assertEquals((-2319), anime0.id);
      assertEquals("null (3:0)", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Anime anime0 = new Anime(1297);
      anime0.lep = 1297;
      anime0.lep = 16;
      int int0 = anime0.getTotal();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Anime anime0 = new Anime((-962));
      anime0.eps = (-604);
      anime0.init();
      assertEquals((-962), anime0.id);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Anime.setCol((-1392));
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Anime anime0 = new Anime((-1190));
      anime0.init();
      anime0.clear();
      assertEquals((-1190), anime0.id);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "8";
      Anime anime0 = null;
      try {
        anime0 = new Anime(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Anime anime0 = new Anime(1297);
      assertEquals(0, anime0.getPct());
      
      anime0.pct = 1297;
      int int0 = anime0.getPct();
      assertEquals(1297, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Anime anime0 = new Anime(1);
      anime0.pct = (-369);
      int int0 = anime0.getPct();
      assertEquals((-369), int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Anime anime0 = new Anime((-2885));
      anime0.rom = "0-dJu,#uMV<`o*/";
      int int0 = anime0.compareTo("null (0:0)");
      assertEquals((-58), int0);
      assertEquals((-2885), anime0.id);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Anime anime0 = new Anime((-2885));
      anime0.rom = "0-dJu,#uMV<`o*/";
      int int0 = anime0.comp("null (0:0)", 99);
      assertEquals((-58), int0);
      assertEquals((-2885), anime0.id);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Anime anime0 = new Anime(2092);
      Ep ep0 = new Ep(0);
      ep0.num = "";
      // Undeclared exception!
      try { 
        anime0.regEp(ep0, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Anime anime0 = new Anime((-1190));
      Ep ep0 = new Ep(0);
      // Undeclared exception!
      try { 
        anime0.regEp(ep0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.arucard21.epox.webaom.data.Anime", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Anime anime0 = new Anime((-2319));
      // Undeclared exception!
      try { 
        anime0.miss();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.arucard21.epox.webaom.data.Anime", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Anime anime0 = new Anime(1297);
      anime0.lep = (-386);
      // Undeclared exception!
      try { 
        anime0.init();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.arucard21.epox.util.Bits", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Anime anime0 = null;
      try {
        anime0 = new Anime((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.arucard21.epox.webaom.data.Anime", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Anime anime0 = null;
      try {
        anime0 = new Anime(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.github.arucard21.epox.webaom.data.Anime", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Anime anime0 = new Anime((-3550));
      // Undeclared exception!
      try { 
        anime0.comp(anime0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.arucard21.epox.webaom.data.Anime", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Anime anime0 = new Anime((-3550));
      anime0.rom = "";
      int int0 = anime0.compareTo(anime0);
      assertEquals(0, int0);
      assertEquals((-3550), anime0.id);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Anime anime0 = new Anime(1297);
      int int0 = anime0.compareTo(anime0.pct);
      assertEquals(1297, anime0.id);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Anime anime0 = new Anime(1316);
      anime0.updatePct();
      assertEquals(0, anime0.pct);
      assertEquals(1316, anime0.id);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Anime anime0 = new Anime(1286);
      anime0.eps = 1286;
      // Undeclared exception!
      try { 
        anime0.updatePct();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.arucard21.epox.webaom.data.Anime", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Anime anime0 = new Anime(1297);
      Ep ep0 = new Ep((-138));
      ep0.num = "P";
      anime0.regEp(ep0, true);
      assertEquals(1297, anime0.id);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Anime anime0 = new Anime(1316);
      anime0.init();
      Ep ep0 = new Ep((-124));
      ep0.num = "P";
      ep0.num = "7";
      anime0.regEp(ep0, false);
      assertEquals(1316, anime0.id);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Anime anime0 = new Anime(1297);
      anime0.init();
      anime0.lep = 1297;
      Ep ep0 = new Ep((-124));
      ep0.num = "P";
      ep0.num = "7";
      anime0.regEp(ep0, true);
      assertEquals(1297, anime0.id);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Anime anime0 = new Anime(1316);
      anime0.init();
      anime0.kan = "P";
      Ep ep0 = new Ep((-124));
      ep0.num = "P";
      ep0.num = "7";
      Anime.TPRI = 1;
      anime0.regEp(ep0, true);
      assertEquals(1316, anime0.id);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Anime anime0 = new Anime(1316);
      anime0.init();
      Ep ep0 = new Ep((-124));
      ep0.num = "P";
      ep0.num = "7";
      Anime.TPRI = 1;
      anime0.regEp(ep0, true);
      assertEquals(1316, anime0.id);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Anime anime0 = new Anime(384);
      int int0 = anime0.getTotal();
      assertEquals(99, int0);
      assertEquals(384, anime0.id);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Anime anime0 = new Anime(0);
      anime0.eps = 2406;
      int int0 = anime0.getTotal();
      assertEquals(2406, int0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Anime anime0 = new Anime(0);
      anime0.eps = 2406;
      anime0.init();
      char char0 = anime0.miss();
      assertEquals(' ', char0);
      assertEquals(0, anime0.id);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Anime anime0 = new Anime(384);
      anime0.init();
      anime0.init();
      assertEquals(384, anime0.id);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Anime.setCol(0);
      Anime.setCol(0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Anime anime0 = new Anime((-3550));
      int int0 = anime0.getPct();
      assertEquals((-3550), anime0.id);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Anime anime0 = new Anime((-1190));
      // Undeclared exception!
      try { 
        anime0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.arucard21.epox.webaom.data.Anime", e);
      }
  }
}
