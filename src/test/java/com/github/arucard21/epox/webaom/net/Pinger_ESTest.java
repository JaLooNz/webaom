/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 13 20:11:21 GMT 2018
 */

package com.github.arucard21.epox.webaom.net;

import org.junit.Ignore;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.arucard21.epox.webaom.net.AConE;
import com.github.arucard21.epox.webaom.net.Pinger;
import com.github.arucard21.epox.webaom.ui.JPanelMain;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Pinger_ESTest extends Pinger_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Pinger pinger0 = null;
      try {
        pinger0 = new Pinger((JPanelMain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.arucard21.epox.webaom.net.Pinger", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JPanelMain jPanelMain0 = mock(JPanelMain.class, new ViolatedAssumptionAnswer());
      doReturn((AConE) null, (AConE) null).when(jPanelMain0).getConnection();
      Pinger pinger0 = new Pinger(jPanelMain0);
      pinger0.run();
      assertFalse(pinger0.isInterrupted());
  }

  @Ignore
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AConE aConE0 = mock(AConE.class, new ViolatedAssumptionAnswer());
      doReturn(true, false).when(aConE0).connect();
      doReturn(">f,-9)").when(aConE0).getLastError();
      doReturn((-475)).when(aConE0).ping();
      JPanelMain jPanelMain0 = mock(JPanelMain.class, new ViolatedAssumptionAnswer());
      doReturn(aConE0, aConE0).when(jPanelMain0).getConnection();
      Pinger pinger0 = new Pinger(jPanelMain0);
      pinger0.run();
      assertEquals(0, pinger0.countStackFrames());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AConE aConE0 = mock(AConE.class, new ViolatedAssumptionAnswer());
      doReturn(true, false).when(aConE0).connect();
      doReturn(">f,-9)").when(aConE0).getLastError();
      doReturn((-475)).when(aConE0).ping();
      JPanelMain jPanelMain0 = mock(JPanelMain.class, new ViolatedAssumptionAnswer());
      doReturn(aConE0, aConE0).when(jPanelMain0).getConnection();
      Pinger pinger0 = new Pinger(jPanelMain0);
      MockThread.getAllStackTraces();
      pinger0.run();
      assertFalse(pinger0.isInterrupted());
  }
}
