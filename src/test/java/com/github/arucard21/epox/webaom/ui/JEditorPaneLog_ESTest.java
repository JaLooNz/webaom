/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 13 20:09:09 GMT 2018
 */

package com.github.arucard21.epox.webaom.ui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.arucard21.epox.webaom.ui.JEditorPaneLog;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.KeyStroke;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JEditorPaneLog_ESTest extends JEditorPaneLog_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JEditorPaneLog jEditorPaneLog0 = new JEditorPaneLog();
      Object object0 = jEditorPaneLog0.getTreeLock();
      jEditorPaneLog0.println(object0);
      assertFalse(jEditorPaneLog0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JEditorPaneLog jEditorPaneLog0 = new JEditorPaneLog();
      jEditorPaneLog0.closeLogFile();
      assertFalse(jEditorPaneLog0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JEditorPaneLog jEditorPaneLog0 = new JEditorPaneLog();
      // Undeclared exception!
      try { 
        jEditorPaneLog0.openLogFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockRandomAccessFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JEditorPaneLog jEditorPaneLog0 = new JEditorPaneLog();
      // Undeclared exception!
      try { 
        jEditorPaneLog0.openLogFile("");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JEditorPaneLog jEditorPaneLog0 = new JEditorPaneLog();
      jEditorPaneLog0.append("D*ow[g+^*");
      assertFalse(jEditorPaneLog0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JEditorPaneLog jEditorPaneLog0 = new JEditorPaneLog();
      jEditorPaneLog0.setHeader("");
      assertFalse(jEditorPaneLog0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JEditorPaneLog jEditorPaneLog0 = new JEditorPaneLog();
      jEditorPaneLog0.setHeader("Apply Rules");
      jEditorPaneLog0.append("Apply Rules");
      assertFalse(jEditorPaneLog0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JEditorPaneLog jEditorPaneLog0 = new JEditorPaneLog();
      jEditorPaneLog0.setHeader((String) null);
      assertTrue(jEditorPaneLog0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JEditorPaneLog jEditorPaneLog0 = new JEditorPaneLog();
      jEditorPaneLog0.append("");
      assertTrue(jEditorPaneLog0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JEditorPaneLog jEditorPaneLog0 = new JEditorPaneLog();
      jEditorPaneLog0.append((String) null);
      assertTrue(jEditorPaneLog0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JEditorPaneLog jEditorPaneLog0 = new JEditorPaneLog();
      Object object0 = jEditorPaneLog0.getValue((String) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JEditorPaneLog jEditorPaneLog0 = new JEditorPaneLog();
      jEditorPaneLog0.status0("D*ow[g+^*");
      assertFalse(jEditorPaneLog0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JEditorPaneLog jEditorPaneLog0 = new JEditorPaneLog();
      ImageIcon imageIcon0 = new ImageIcon("");
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem("<style type=\"text/css\">body{background-color:#FFFFFF;font-family:Verdana,Arial,Helvetica,sans-serif;font-size:11pt;}</style>", imageIcon0, false);
      ActionEvent actionEvent0 = new ActionEvent(jRadioButtonMenuItem0, 0, "]`EjmdKoI\"{n", 0);
      // Undeclared exception!
      try { 
        jEditorPaneLog0.actionPerformed(actionEvent0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JEditorPaneLog jEditorPaneLog0 = new JEditorPaneLog();
      Character character0 = Character.valueOf(')');
      KeyStroke keyStroke0 = KeyStroke.getKeyStroke(character0, 845);
      jEditorPaneLog0.putValue("P$t5LVejkIm_qkz<Ku", keyStroke0);
      assertFalse(jEditorPaneLog0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JEditorPaneLog jEditorPaneLog0 = new JEditorPaneLog();
      jEditorPaneLog0.status1("size");
      assertFalse(jEditorPaneLog0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JEditorPaneLog jEditorPaneLog0 = new JEditorPaneLog();
      jEditorPaneLog0.openLogFile("P$t5LVejkIm_qkz<Ku");
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem("i^w>%vty&{RG j", (Icon) null, false);
      jEditorPaneLog0.println(jRadioButtonMenuItem0);
      assertFalse(jRadioButtonMenuItem0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JEditorPaneLog jEditorPaneLog0 = new JEditorPaneLog();
      jEditorPaneLog0.openLogFile("size");
      jEditorPaneLog0.closeLogFile();
      assertFalse(jEditorPaneLog0.getIgnoreRepaint());
  }
}
