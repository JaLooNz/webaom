/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 13 20:03:13 GMT 2018
 */

package com.github.arucard21.epox.webaom.ui;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.arucard21.epox.webaom.ui.KeyAdapterJob;
import com.github.arucard21.epox.webaom.ui.RowModel;
import java.awt.event.KeyEvent;
import java.util.Stack;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class KeyAdapterJob_ESTest extends KeyAdapterJob_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      JTable jTable0 = new JTable(stack0, stack0);
      KeyAdapterJob keyAdapterJob0 = new KeyAdapterJob(jTable0, (RowModel) null);
      KeyEvent keyEvent0 = new KeyEvent(jTable0, 22, 9, 3, 3, '.');
      keyAdapterJob0.keyPressed(keyEvent0);
      assertEquals(0, keyEvent0.getKeyLocation());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      JTable jTable0 = new JTable(defaultTableModel0);
      KeyAdapterJob keyAdapterJob0 = new KeyAdapterJob(jTable0, (RowModel) null);
      KeyEvent keyEvent0 = new KeyEvent(jTable0, 1, 1, 'R', 'R', 'R');
      keyAdapterJob0.keyPressed(keyEvent0);
      assertFalse(keyEvent0.isActionKey());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JTable jTable0 = new JTable();
      KeyAdapterJob keyAdapterJob0 = new KeyAdapterJob(jTable0, (RowModel) null);
      KeyEvent keyEvent0 = new KeyEvent(jTable0, 0, 0, 0, 76, 'F');
      keyAdapterJob0.keyPressed(keyEvent0);
      assertFalse(keyEvent0.isMetaDown());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JTable jTable0 = new JTable();
      KeyAdapterJob keyAdapterJob0 = new KeyAdapterJob(jTable0, (RowModel) null);
      KeyEvent keyEvent0 = new KeyEvent(jTable0, 6, 6, 6, 66, '=');
      keyAdapterJob0.keyPressed(keyEvent0);
      assertEquals('=', keyEvent0.getKeyChar());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      JTable jTable0 = new JTable(defaultTableModel0);
      KeyAdapterJob keyAdapterJob0 = new KeyAdapterJob(jTable0, (RowModel) null);
      KeyEvent keyEvent0 = new KeyEvent(jTable0, 0, 2, 22, 68, 'F');
      keyAdapterJob0.keyPressed(keyEvent0);
      assertEquals(0, keyEvent0.getKeyLocation());
  }
}
