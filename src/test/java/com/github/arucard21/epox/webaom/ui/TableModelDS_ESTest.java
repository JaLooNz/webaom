/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 13 20:04:27 GMT 2018
 */

package com.github.arucard21.epox.webaom.ui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.arucard21.epox.util.DSData;
import com.github.arucard21.epox.webaom.Rules;
import com.github.arucard21.epox.webaom.ui.JPanelOptRls;
import com.github.arucard21.epox.webaom.ui.TableModelDS;
import java.util.HashSet;
import java.util.Stack;
import java.util.Vector;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.javax.swing.MockDefaultListSelectionModel;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TableModelDS_ESTest extends TableModelDS_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector<DefaultTableModel> vector0 = new Vector<DefaultTableModel>();
      TableModelDS tableModelDS0 = new TableModelDS(vector0, "Cnz", "<Gfe]iLhXptg");
      tableModelDS0.setValueAt((Object) null, 0, 2);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      vector0.add(defaultTableModel0);
      // Undeclared exception!
      try { 
        tableModelDS0.setValueAt("lvo$[:`Hslr0", 2, 2);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.swing.table.DefaultTableModel cannot be cast to com.github.arucard21.epox.util.DSData
         //
         verifyException("com.github.arucard21.epox.webaom.ui.TableModelDS", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      TableModelDS tableModelDS0 = new TableModelDS(vector0, "H-uOjzvD]n", "H-uOjzvD]n");
      // Undeclared exception!
      try { 
        tableModelDS0.getValueAt(2092, 2092);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2092 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TableModelDS tableModelDS0 = new TableModelDS((Vector) null, "com.github.arucard21.epox.webaom.ui.TableModelDS", "com.github.arucard21.epox.webaom.ui.TableModelDS");
      Vector vector0 = tableModelDS0.getData();
      assertNull(vector0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashSet<Boolean> hashSet0 = new HashSet<Boolean>();
      Vector<Boolean> vector0 = new Vector<Boolean>(hashSet0);
      TableModelDS tableModelDS0 = new TableModelDS(vector0, (String) null, (String) null);
      Vector vector1 = tableModelDS0.getData();
      assertEquals(0, vector1.capacity());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      TableModelDS tableModelDS0 = new TableModelDS(stack0, "com.github.arucard21.epox.webaom.ui.TableModelDS", (String) null);
      String string0 = tableModelDS0.getColumnName(2);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Stack<DSData> stack0 = new Stack<DSData>();
      TableModelDS tableModelDS0 = new TableModelDS(stack0, "AES", "");
      String string0 = tableModelDS0.getColumnName(2);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Stack<Integer> stack0 = new Stack<Integer>();
      TableModelDS tableModelDS0 = new TableModelDS(stack0, "", "FrB1Q");
      int int0 = tableModelDS0.getColumnCount();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Vector<DefaultTableModel> vector0 = new Vector<DefaultTableModel>();
      TableModelDS tableModelDS0 = new TableModelDS(vector0, "Cnz", "<Gfe]iLhXptg");
      // Undeclared exception!
      try { 
        tableModelDS0.setValueAt((Object) null, 0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.arucard21.epox.webaom.ui.TableModelDS", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      TableModelDS tableModelDS0 = new TableModelDS(stack0, "", (String) null);
      // Undeclared exception!
      try { 
        tableModelDS0.setValueAt(tableModelDS0.SRC, 1381, 669);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1381 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TableModelDS tableModelDS0 = new TableModelDS((Vector) null, "M,NT4;NSxEY%ducO", "E8;:P|Krbt");
      // Undeclared exception!
      try { 
        tableModelDS0.getValueAt((-1), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.arucard21.epox.webaom.ui.TableModelDS", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      TableModelDS tableModelDS0 = new TableModelDS(vector0, "m#rxK\"<]q~h/aI#oJ", "m#rxK\"<]q~h/aI#oJ");
      vector0.add((Object) tableModelDS0.SRC);
      // Undeclared exception!
      try { 
        tableModelDS0.getValueAt(0, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to com.github.arucard21.epox.util.DSData
         //
         verifyException("com.github.arucard21.epox.webaom.ui.TableModelDS", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Stack<Integer> stack0 = new Stack<Integer>();
      TableModelDS tableModelDS0 = new TableModelDS(stack0, "", "FrB1Q");
      // Undeclared exception!
      try { 
        tableModelDS0.getValueAt((-621), 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TableModelDS tableModelDS0 = new TableModelDS((Vector) null, "", "");
      // Undeclared exception!
      try { 
        tableModelDS0.getRowCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.arucard21.epox.webaom.ui.TableModelDS", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        TableModelDS.formatTable((JTable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.arucard21.epox.webaom.ui.TableModelDS", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Stack<JSpinner.DefaultEditor> stack0 = new Stack<JSpinner.DefaultEditor>();
      TableModelDS tableModelDS0 = new TableModelDS(stack0, "c2oBs*y?%66wOR8Tc", "c2oBs*y?%66wOR8Tc");
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      MockDefaultListSelectionModel mockDefaultListSelectionModel0 = new MockDefaultListSelectionModel();
      JTable jTable0 = new JTable(tableModelDS0, defaultTableColumnModel0, mockDefaultListSelectionModel0);
      // Undeclared exception!
      try { 
        TableModelDS.formatTable(jTable0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Vector<Boolean> vector0 = new Vector<Boolean>();
      TableModelDS tableModelDS0 = new TableModelDS(vector0, "", "");
      JTable jTable0 = new JTable(tableModelDS0);
      TableModelDS.formatTable(jTable0);
      assertEquals(3, tableModelDS0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Vector<DefaultTableModel> vector0 = new Vector<DefaultTableModel>();
      TableModelDS tableModelDS0 = new TableModelDS(vector0, "Cnz", "Cnz");
      tableModelDS0.setData(vector0);
      assertEquals(0, vector0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Stack<Integer> stack0 = new Stack<Integer>();
      TableModelDS tableModelDS0 = new TableModelDS(stack0, "=em=?/.4yjAv\"z9Z{", "=em=?/.4yjAv\"z9Z{");
      String string0 = tableModelDS0.getColumnName(1073);
      assertEquals("No such column!", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Vector<DefaultTableModel> vector0 = new Vector<DefaultTableModel>();
      TableModelDS tableModelDS0 = new TableModelDS(vector0, "Cnz", "Cnz");
      tableModelDS0.setValueAt((Object) null, 0, 0);
      assertEquals("[#\u0001\\0]", vector0.toString());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Vector<DefaultTableModel> vector0 = new Vector<DefaultTableModel>();
      TableModelDS tableModelDS0 = new TableModelDS(vector0, "Cnz", "<Gfe]iLhXptg");
      tableModelDS0.setValueAt((Object) null, 0, 100);
      tableModelDS0.setValueAt("", 1, 1);
      assertEquals(2, tableModelDS0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Vector<DefaultTableModel> vector0 = new Vector<DefaultTableModel>();
      TableModelDS tableModelDS0 = new TableModelDS(vector0, "Cnz", "Cnz");
      vector0.addElement((DefaultTableModel) null);
      tableModelDS0.setValueAt("lvo$[:`Hslr0", 1, 1);
      assertEquals(3, tableModelDS0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Rules rules0 = new Rules();
      JPanelOptRls jPanelOptRls0 = new JPanelOptRls(rules0);
      TableModelDS tableModelDS0 = jPanelOptRls0.rmDef;
      JTable.PrintMode jTable_PrintMode0 = JTable.PrintMode.NORMAL;
      // Undeclared exception!
      try { 
        tableModelDS0.setValueAt(jTable_PrintMode0, 0, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.swing.JTable$PrintMode cannot be cast to java.lang.Boolean
         //
         verifyException("com.github.arucard21.epox.webaom.ui.TableModelDS", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Vector<KeyStroke> vector0 = new Vector<KeyStroke>();
      TableModelDS tableModelDS0 = new TableModelDS(vector0, "com.github.arucard21.epox.webaom.ui.TableModelDS", "com.github.arucard21.epox.webaom.ui.TableModelDS");
      vector0.add((KeyStroke) null);
      tableModelDS0.setValueAt("com.github.arucard21.epox.webaom.ui.TableModelDS", 0, 0);
      assertEquals(2, tableModelDS0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Rules rules0 = new Rules();
      JPanelOptRls jPanelOptRls0 = new JPanelOptRls(rules0);
      TableModelDS tableModelDS0 = jPanelOptRls0.rmDef;
      Object object0 = tableModelDS0.getValueAt(1, 2);
      assertEquals("", object0);
      assertEquals(3, tableModelDS0.getColumnCount());
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Rules rules0 = new Rules();
      JPanelOptRls jPanelOptRls0 = new JPanelOptRls(rules0);
      TableModelDS tableModelDS0 = jPanelOptRls0.rmDef;
      Object object0 = tableModelDS0.getValueAt(1, 1);
      assertEquals(3, tableModelDS0.getColumnCount());
      assertEquals("\"", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Stack<Integer> stack0 = new Stack<Integer>();
      TableModelDS tableModelDS0 = new TableModelDS(stack0, "=em=?/.4yjAv\"z9Z{", "=em=?/.4yjAv\"z9Z{");
      Object object0 = tableModelDS0.getValueAt(0, 0);
      assertEquals(false, object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Rules rules0 = new Rules();
      JPanelOptRls jPanelOptRls0 = new JPanelOptRls(rules0);
      TableModelDS tableModelDS0 = jPanelOptRls0.rmDef;
      Object object0 = tableModelDS0.getValueAt(1, 1498);
      assertNull(object0);
      assertEquals(3, tableModelDS0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Rules rules0 = new Rules();
      JPanelOptRls jPanelOptRls0 = new JPanelOptRls(rules0);
      TableModelDS tableModelDS0 = jPanelOptRls0.rmDef;
      Class class0 = tableModelDS0.getColumnClass(17891330);
      assertEquals("class java.lang.String", class0.toString());
      assertEquals(3, tableModelDS0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TableModelDS tableModelDS0 = new TableModelDS((Vector) null, "M,NT4;NSxEY%ducO", "E8;:P|Krbt");
      Class class0 = tableModelDS0.getColumnClass(0);
      assertEquals("class java.lang.Boolean", class0.toString());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Rules rules0 = new Rules();
      JPanelOptRls jPanelOptRls0 = new JPanelOptRls(rules0);
      TableModelDS tableModelDS0 = jPanelOptRls0.rmDef;
      boolean boolean0 = tableModelDS0.isCellEditable(501, 0);
      assertEquals(3, tableModelDS0.getColumnCount());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Rules rules0 = new Rules();
      JPanelOptRls jPanelOptRls0 = new JPanelOptRls(rules0);
      TableModelDS tableModelDS0 = jPanelOptRls0.rmDef;
      int int0 = tableModelDS0.getRowCount();
      assertEquals(3, tableModelDS0.getColumnCount());
      assertEquals(11, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Rules rules0 = new Rules();
      JPanelOptRls jPanelOptRls0 = new JPanelOptRls(rules0);
      TableModelDS tableModelDS0 = jPanelOptRls0.rmDef;
      tableModelDS0.getData();
      assertEquals(3, tableModelDS0.getColumnCount());
  }
}
